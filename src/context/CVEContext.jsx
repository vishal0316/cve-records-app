/* eslint-disable react-refresh/only-export-components */
import { createContext, useContext, useState } from "react";
import PropTypes from "prop-types";
const CVEContext = createContext();

export const useCVEContext = () => useContext(CVEContext);

export const CVEProvider = ({ children }) => {
  const [cveRecords, setCveRecords] = useState([
    {
      id: "CVE-2021-4048",
      severity: "CRITICAL",
      cvss: 9.1,
      affectedPackages: "libblas3",
      cweId: "CWE-125",
    },
    {
      id: "CVE-2022-36227",
      severity: "CRITICAL",
      cvss: 9.8,
      affectedPackages: "libarchive13",
      cweId: "CWE-476",
    },
    {
      id: "CVE-2021-3697",
      severity: "HIGH",
      cvss: 7,
      affectedPackages: "grub-common, grub-pc, grub-pc-bin, grub2-common",
      cweId: "CWE-787",
    },
    {
      id: "CVE-2021-38091",
      severity: "HIGH",
      cvss: 8.8,
      affectedPackages: "libavcodec58, libavutil56, libswresample3",
      cweId: "CWE-190",
    },
    {
      id: "CVE-2016-2781",
      severity: "MEDIUM",
      cvss: 6.5,
      affectedPackages: "coreutils",
      cweId: "CWE-20",
    },
    {
      id: "CVE-2016-9802",
      severity: "MEDIUM",
      cvss: 5.3,
      affectedPackages: "bluez, libbluetooth3",
      cweId: "CWE-119",
    },
    {
      id: "CVE-2019-1563",
      severity: "LOW",
      cvss: 3.7,
      affectedPackages: "libnode72",
      cweId: "CWE-327",
    },
  ]);

  const addCveRecord = (newRecord) => {
    setCveRecords([...cveRecords, newRecord]);
  };

  const updateCveRecord = (updatedRecord) => {
    setCveRecords(
      cveRecords.map((record) =>
        record.id === updatedRecord.id ? updatedRecord : record
      )
    );
  };

  const deleteCveRecord = (id) => {
    setCveRecords(cveRecords.filter((record) => record.id !== id));
  };

  return (
    <CVEContext.Provider
      value={{ cveRecords, addCveRecord, updateCveRecord, deleteCveRecord }}
    >
      {children}
    </CVEContext.Provider>
  );
};

CVEProvider.propTypes = {
  children: PropTypes.node.isRequired,
};
