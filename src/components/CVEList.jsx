import { useState } from "react";
import EditCVE from "./EditCVE";
import PropTypes from "prop-types";
import {
  Table,
  TableBody,
  TableCell,
  TableHead,
  TableHeader,
  TableRow,
} from "./table";
import {
  AlertDialog,
  AlertDialogAction,
  AlertDialogCancel,
  AlertDialogContent,
  AlertDialogDescription,
  AlertDialogFooter,
  AlertDialogHeader,
  AlertDialogTitle,
  AlertDialogTrigger,
} from "./alert-dialog";
import { Button } from "./button";

function CVEList({ cveRecords, updateCVERecord, deleteCVERecord }) {
  const [editingRecord, setEditingRecord] = useState(null);
  const [searchQuery, setSearchQuery] = useState(""); // New state for search query

  // Filtered records based on search query
  const filteredRecords = cveRecords.filter((record) =>
    Object.values(record).some((val) =>
      val.toString().toLowerCase().includes(searchQuery.toLowerCase())
    )
  );

  return (
    <div>
      <input
        type="text"
        placeholder="Search CVEs..."
        value={searchQuery}
        onChange={(e) => setSearchQuery(e.target.value)}
        className="mb-4 mt-4 bg-transparent w-full  p-2 border rounded"
      />

      <Table>
        <TableHeader>
          <TableRow>
            <TableHead className="w-[100px]">CVE-ID</TableHead>
            <TableHead>Severity</TableHead>
            <TableHead>CVSS</TableHead>
            <TableHead>Affected Packages</TableHead>
            <TableHead>CWE-ID</TableHead>
            <TableHead>Action</TableHead>
          </TableRow>
        </TableHeader>
        <TableBody>
          {filteredRecords.map((record, index) => (
            <TableRow key={index}>
              <TableCell className="font-medium">{record.id}</TableCell>
              <TableCell>{record.severity}</TableCell>
              <TableCell>{record.cvss}</TableCell>
              <TableCell>{record.affectedPackages}</TableCell>
              <TableCell>{record.cweId}</TableCell>
              <TableCell>
                <Button
                  className="mr-5"
                  onClick={() => setEditingRecord(record)}
                >
                  {" "}
                  Edit
                </Button>

                <AlertDialog>
                  <AlertDialogTrigger>
                    <Button variant="destructive"> Delete</Button>
                  </AlertDialogTrigger>
                  <AlertDialogContent>
                    <AlertDialogHeader>
                      <AlertDialogTitle>
                        Are you absolutely sure?
                      </AlertDialogTitle>
                      <AlertDialogDescription>
                        This action cannot be undone. This will permanently
                        delete your account and remove your data from our
                        servers.
                      </AlertDialogDescription>
                    </AlertDialogHeader>
                    <AlertDialogFooter>
                      <AlertDialogCancel>Cancel</AlertDialogCancel>
                      <AlertDialogAction
                        onClick={() => deleteCVERecord(record.id)}
                      >
                        Continue
                      </AlertDialogAction>
                    </AlertDialogFooter>
                  </AlertDialogContent>
                </AlertDialog>
              </TableCell>
            </TableRow>
          ))}
        </TableBody>
      </Table>
      {editingRecord && (
        <EditCVE
          record={editingRecord}
          updateCVERecord={updateCVERecord}
          closeModal={() => setEditingRecord(null)}
        />
      )}
    </div>
  );
}

CVEList.propTypes = {
  cveRecords: PropTypes.arrayOf(PropTypes.object).isRequired,
  updateCVERecord: PropTypes.func.isRequired,
  deleteCVERecord: PropTypes.func.isRequired,
};

export default CVEList;
